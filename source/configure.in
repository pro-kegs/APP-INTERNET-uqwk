dnl Process this file with autoconf to produce a configure script.
dnl $Id: configure.in,v 1.3 1999/04/20 13:12:44 js Exp $
AC_INIT

AC_SUBST(BINDIR)
AC_SUBST(LIBDIR)

dnl Checks for programs.
if test -z "${CFLAGS}" ; then
  OLDCFLAGS="no"
fi
AC_PROG_CC
AC_PROG_MAKE_SET


dnl Where to locate the bourne shell?
SHELL=/bin/sh
AC_SUBST(SHELL)
dnl Which CFLAGS to use?
if test "${OLDCFLAGS}" = "no"; then
  if test ${GCC} = "yes" ; then
    CFLAGS="-O4 -Wall"
  else
    CFLAGS="-O2"
  fi
fi
AC_SUBST(CFLAGS)
AC_SUBST(DEFS)
AC_SUBST(INCLUDES)

dnl Determine which libraries to use for programs using sockets
NOSOCKLIBS=$LIBS
dnl first, the socket functions
SOCKET_FOUND=no
SOCKLIBS=
AC_CHECK_LIB(socket, socket,[SOCKET_FOUND=yes;SOCKLIBS="-lsocket"])
if test ${SOCKET_FOUND} = no; then
  AC_CHECK_LIB(bsd, socket,[SOCKET_FOUND=yes;SOCKLIBS="-lbsd";DEFS="$DEFS -D_BSD=43"])
  if test ${SOCKET_FOUND} = no; then
    AC_CHECK_LIB(sun, socket,[SOCKET_FOUND=yes;SOCKLIBS="-lsun"])
  fi
fi
dnl then gethostname
GHN_FOUND=no
AC_CHECK_LIB(nsl,gethostname,[GHN_FOUND=yes;SOCKLIBS="$SOCKLIBS -lnsl"])
if test ${GHN_FOUND} = no; then
  AC_CHECK_LIB(nsl,gethostname,[GHN_FOUND=yes;SOCKLIBS="$SOCKLIBS -lsun"])
fi

AC_SUBST(SOCKLIBS)

dnl Checks for header files.
AC_HEADER_STDC

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_CHECK_FUNCS(strdup)

dnl Site configuration...
dnl
SITECFG="config-generic.h"
dnl Handle --with-config=... argument to configure
AC_ARG_WITH(config,
[  --with-config=FILE      site configuration to use [config-generic.h]],
SITECFG=${withval},)
AC_SUBST(SITECFG)

dnl Features...

dnl GNKSAlib...
dnl
AC_ARG_WITH(gnksa,
[  --with-gnksa=DIR        enable gnksalib support],
GNKSACFLAGS="-DGNKSA -I${withval}";GNKSALDLAGS="-L${withval} -lgnksa",)
AC_SUBST(GNKSACFLAGS)
AC_SUBST(GNKSALDLAGS)

dnl External Regex lib...
dnl
AC_ARG_WITH(regex,
[  --with-regex=DIR        regex lib to be used instead of broken vendor lib],
RECFLAGS="-I${withval}";RELDFLAGS="-L${withval} -lregex",)
AC_SUBST(RECFLAGS)
AC_SUBST(RELDFLAGS)

dnl Scoring...
dnl
SCORECFLAGS="-DSCORES"
AC_ARG_ENABLE(scores,
[  --disable-scores        disable article scoring support],
test ${enableval} = "no" && SCORECFLAGS="",)
AC_SUBST(SCORECFLAGS)

dnl NNTPAUTH...
dnl
NNTPAUTHCFLAGS="-DNNTPAUTH"
AC_ARG_ENABLE(nntpauth,
[  --disable-nntpauth      disable nntp authentication support],
test ${enableval} = "no" && NNTPAUTHCFLAGS="",)
AC_SUBST(NNTPAUTHCFLAGS)

dnl NNTP...
dnl
test -z "$NNTPAUTHCFLAGS" && NNTPCFLAGS="-DNNTP"
AC_ARG_ENABLE(nntp,
[  --disable-nntp          disable nntp support],
test ${enableval} = "no" && NNTPCFLAGS="",)
AC_SUBST(NNTPCFLAGS)


AC_OUTPUT(Makefile)
